# Setting the prefix from C-b to C-a
# set -g prefix C-a
# Free the original Ctrl-b prefix keybinding
# unbind C-b

bind-key C-b send-prefix

set -g mouse on
set-option -g focus-events on
set-option -sg escape-time 10

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"


# Use vim keybindings in copy mode
setw -g mode-keys vi
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# Set vi as the default editor
set -g status-keys vi

# another navi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# splitting panes with | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Set the base index for windows to 1 instead of 0
set -g base-index 1
# Set the base index for panes to 1 instead of 0
set -g pane-base-index 1

# Set the base index for panes to 1 instead of 0
set -g pane-base-index 1

######################
### DESIGN CHANGES ###
######################

set-option -ga terminal-overrides ',screen-256color:RGB'


black="#000000"
orange="#FF6600"
white="#FFFFFF"
peach="#C93250"

# panes
set -g pane-border-style "fg=$white,dim"
set -g pane-active-border-style "fg=$orange,dim"

# Active pane normal, other shaded out
#setw -g window-style fg=black,bg=colour235
#setw -g window-style fg=$white,bg=colour235
#setw -g window-active-style fg=$white,bg=$black


# # statusbar

set -g status-keys vi
set -g status-justify left
set -g status-style "bg=$orange,fg=$white"

set -g status-right-style default
set -g status-right-style "bg=$peach,fg=$black"
set -g status-right-length 50
set -g status-right " #[bold]%d/%m/%y T %H:%M:%S"

set -g status-left-style default
#set -g status-left-length 50
set -g status-left " #[bg=$white,fg=$black,bold]#{?client_prefix,#[reverse]!#[noreverse],}"

setw -g window-status-current-style "bg=$black"
setw -g window-status-format '#I:#W#F'
